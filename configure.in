AC_INIT(gothenburg, 0.0.1, cebuzz@gmail.com)
#AC_CONFIG_SRCDIR(src/gothenburg.cs)
AM_INIT_AUTOMAKE(gothenburg, 0.0.2)
AC_CONFIG_HEADER(config.h)
AC_PROG_INSTALL

CS="C#"

AC_PATH_PROG(GMCS, gmcs)
if test "x$GMCS" = "x" ; then
  AC_MSG_ERROR([Can't find "gmcs" in your PATH])
fi

AC_SUBST(GMCS)

#Check dependencies
dnl gtk-sharp
GTKSHARP_REQUIRED_VERSION=0.18
PKG_CHECK_MODULES(GTKSHARP, gtk-sharp-2.0 >= $GTKSHARP_REQUIRED_VERSION)
AC_SUBST(GTKSHARP_LIBS)

dnl DBus
DBUS_REQUIRED_VERSION=0.4
DBUS_GLIB_REQUIRED_VERSION=0.3
PKG_CHECK_MODULES(DBUS, ndesk-dbus-1.0 >= $DBUS_REQUIRED_VERSION ndesk-dbus-glib-1.0 >= $DBUS_GLIB_REQUIRED_VERSION)
AC_SUBST(DBUS_LIBS)

dnl NUnit (required for unit tests)
PKG_CHECK_MODULES(NUNIT, nunit, HAVE_NUNIT="yes", HAVE_NUNIT="no")
AM_CONDITIONAL(HAVE_NUNIT, test "$HAVE_NUNIT" = "yes")
AC_SUBST(NUNIT_LIBS)
AC_PATH_PROG(NUNIT, nunit-console)


required_assemblies="Microsoft.Build.Utilities"

for asm in $required_assemblies
do
  AC_MSG_CHECKING([for Mono 2.0 GAC for $asm.dll])
  if test \
    -e "$($PKG_CONFIG --variable=libdir mono)/mono/2.0/$asm.dll" -o \
    -e "$($PKG_CONFIG --variable=prefix mono)/lib/mono/2.0/$asm.dll"; \
  then \
    AC_MSG_RESULT([found])
  else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([missing reqired Mono 2.0 assembly: $asm.dll])
  fi  
done



AC_PROG_MAKE_SET
                       
dnl read Makefile.in and write Makefile
AC_OUTPUT([\
Makefile \
src/Makefile \
test/Makefile \
resources/Makefile \
])
